package pwd_gen;

import java.util.ArrayList;
import java.util.Arrays;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

@SuppressWarnings("serial")
class password_gen_ui extends javax.swing.JFrame{

    /**
     * Creates new form ContactEditorUI
     */
    public password_gen_ui() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings({"unchecked"})
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jCheckBoxUppercases = new javax.swing.JCheckBox();
        jCheckBoxLowercases = new javax.swing.JCheckBox();
        jCheckBoxNumbers = new javax.swing.JCheckBox();
        jCheckBoxSymbols = new javax.swing.JCheckBox();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jCheckBoxUppercases.setText("Uppercases");
        jCheckBoxUppercases.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	jCheckBoxUppercasesActionPerformed(evt);
            }
        });

        jCheckBoxLowercases.setText("Lowercases");
        jCheckBoxLowercases.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	jCheckBoxLowercasesActionPerformed(evt);
            }
        });

        jCheckBoxNumbers.setText("Numbers");
        jCheckBoxNumbers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	jCheckBoxNumbersActionPerformed(evt);
            }
        });

        jCheckBoxSymbols.setText("Symbols");
        jCheckBoxSymbols.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	jCheckBoxSymbolsActionPerformed(evt);
            }
        });

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                jTextField1ActionPerformed(evt);
            }
        });
        
        
        jLabel1.setFont(new java.awt.Font("Unispace", 1, 28)); // NOI18N
        jLabel1.setText("...SIMPLE PASSWORD GENERATOR V1...");

        jLabel5.setFont(new java.awt.Font("Unispace", 0, 12)); // NOI18N
        jLabel5.setText("Provide desired password length");

        jLabel6.setFont(new java.awt.Font("Unispace", 1, 12)); // NOI18N
        jLabel6.setText("Tick to exclude from generation");

        jButton1.setBackground(new java.awt.Color(153, 255, 51));
        jButton1.setFont(new java.awt.Font("Unispace", 1, 18)); // NOI18N
        jButton1.setText("GENERATE!");
        jButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel7.setText("Generated passwords history");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {},
            new String [] {
                "No.", "Password"
            }
        ) {
            @SuppressWarnings("rawtypes")
			Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };

            @SuppressWarnings("rawtypes")
			public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 581, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel6))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(78, 78, 78)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBoxUppercases)
                                    .addComponent(jCheckBoxLowercases))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jCheckBoxNumbers)
                                        .addGap(15, 15, 15))
                                    .addComponent(jCheckBoxSymbols, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addGap(49, 49, 49))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(22, 22, 22))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxUppercases)
                    .addComponent(jCheckBoxSymbols)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxNumbers)
                    .addComponent(jCheckBoxLowercases))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>                        

    private void jCheckBoxUppercasesActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    	excludedOptions[0] = jCheckBoxUppercases.isSelected();

    }
    private void jCheckBoxLowercasesActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    	excludedOptions[1] = jCheckBoxLowercases.isSelected();


    }
    private void jCheckBoxNumbersActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    	excludedOptions[2] = jCheckBoxNumbers.isSelected();


    }
    private void jCheckBoxSymbolsActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    	excludedOptions[3] = jCheckBoxSymbols.isSelected();

    }

//    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {                                            
//        // TODO add your handling code here:
//    }                                           

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
		if(jTextField1.getText().isEmpty() || jTextField1.getText().equals("0")) {
			JOptionPane.showMessageDialog(null, "Warning: Password length cannot be zero!");
		} else {
	    	int passwordLength = Integer.parseInt(jTextField1.getText());
	    	ArrayList<String> symbols = new ArrayList<>();
			if(!excludedOptions[0]) {symbols.add("ABCDEFGHIJKLMNOPQRSTUVWXYZ");}
			if(!excludedOptions[1]) {symbols.add("abcdefghijklmnopqrstuvwxyz");}
			if(!excludedOptions[2]) {symbols.add("0123456789");}
			if(!excludedOptions[3]) {symbols.add("!\"#$%&\'()*+,-./:;<=>?[\\]^`{|}~");}
			
			//if excludedOptions all ticked, send warning!		
			if(symbols.isEmpty()) {
				JOptionPane.showMessageDialog(null, "Warning: cannot excluded all options!");
			} else {
				int size = symbols.size();
				String password = "";
				for(int i =0; i<passwordLength; i++) {
					int randIdx = (int)(Math.random()*size);
					
					int randIdxSize = symbols.get(randIdx).length();
					int randSelect = (int)(Math.random()*randIdxSize);
					
					password += symbols.get(randIdx).charAt(randSelect);
				}
				
				
				System.out.println(password);
				//add the newly generated password into table
				Object[] row = {tableNoCount, password};
			    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
			    model.addRow(row);
				tableNoCount += 1;
			}
	    }                                        
    }
    public static void main(String args[]) {

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(password_gen_ui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(password_gen_ui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(password_gen_ui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(password_gen_ui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new password_gen_ui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBoxUppercases;
    private javax.swing.JCheckBox jCheckBoxLowercases;
    private javax.swing.JCheckBox jCheckBoxNumbers;
    private javax.swing.JCheckBox jCheckBoxSymbols;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration            
    // my own variables
    private boolean[] excludedOptions = new boolean[4]; //default is false;
	private int tableNoCount = 1;

}
